package com.no832;

/*
832翻转图像
给定一个二进制矩阵 A，我们想先水平翻转图像，然后反转图像并返回结果。

水平翻转图片就是将图片的每一行都进行翻转，即逆序。例如，水平翻转 [1, 1, 0] 的结果是 [0, 1, 1]。

反转图片的意思是图片中的 0 全部被 1 替换， 1 全部被 0 替换。例如，反转 [0, 1, 1] 的结果是 [1, 0, 0]。

示例 1:

输入: [[1,1,0],[1,0,1],[0,0,0]]
输出: [[1,0,0],[0,1,0],[1,1,1]]
解释: 首先翻转每一行: [[0,1,1],[1,0,1],[0,0,0]]；
     然后反转图片: [[1,0,0],[0,1,0],[1,1,1]]
示例 2:

输入: [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]
输出: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
解释: 首先翻转每一行: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]]；
     然后反转图片: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
说明:

1 <= A.length = A[0].length <= 20
0 <= A[i][j] <= 1

 */
public class FlipAndReverseImage {
    public int[][] flipAndInvertImage(int[][] A) {

        if(A==null)
            return null;

        int[][] ret = new int[A.length][A[0].length];

        //第一次循环，翻转
        for (int i = 0; i < A.length; i++) {
            int left = 0;
            int right = A[i].length-1;
            while (left<=right){
                swapAndStore(A[i],ret[i],left++,right--);
            }
        }

        //第二次循环，反转
        for (int i = 0; i < ret.length; i++) {
            for (int j = 0; j < ret[i].length; j++) {
                ret[i][j] = 1^ret[i][j];
            }
        }

        return ret;
    }

    private void swapAndStore(int[] arr,int[] ret, int left, int right) {
        ret[left] = arr[right];
        ret[right] = arr[left];
    }

    /*
            输入: [[1,1,0],[1,0,1],[0,0,0]]
            输出: [[1,0,0],[0,1,0],[1,1,1]]
            解释: 首先翻转每一行: [[0,1,1],[1,0,1],[0,0,0]]；
                 然后反转图片: [[1,0,0],[0,1,0],[1,1,1]]

             输入: [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]
            输出: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
            解释: 首先翻转每一行: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]]；
                 然后反转图片: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
     */
    public static void main(String[] args) {
        int[][] arr = {{1,1,0,0},{1,0,0,1},{0,1,1,1},{1,0,1,0}};
        int[][] arr2 = {{1,1,0},{1,0,1},{0,0,0}};
        int[][] ints = new FlipAndReverseImage().flipAndInvertImage(arr2);

    }
}
